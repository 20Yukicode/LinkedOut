// <auto-generated />
using System;
using LinkedOut.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LinkedOut.DB.Migrations
{
    [DbContext(typeof(LinkedOutContext))]
    [Migration("20220528105800_deleteNum")]
    partial class deleteNum
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("LinkedOut.DB.Entity.AppFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasComment("文件Id");

                    b.Property<int?>("AssociatedId")
                        .HasColumnType("int")
                        .HasColumnName("associated_id")
                        .HasComment("与之关联的Id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("create_time")
                        .HasComment("创建时间");

                    b.Property<string>("FileType")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("file_type")
                        .HasComment("文件类型（0是简历，1是动态）");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name")
                        .HasComment("文件名称");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("update_time")
                        .HasComment("更新时间");

                    b.Property<string>("Url")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("url")
                        .HasComment("文件url");

                    b.HasKey("Id");

                    b.ToTable("app_file", (string)null);
                });

            modelBuilder.Entity("LinkedOut.DB.Entity.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasComment("申请Id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("create_time")
                        .HasComment("创建时间");

                    b.Property<int?>("JobId")
                        .HasColumnType("int")
                        .HasColumnName("job_id")
                        .HasComment("岗位Id");

                    b.Property<int?>("ResumeId")
                        .HasColumnType("int")
                        .HasColumnName("resume_id")
                        .HasComment("简历Id");

                    b.Property<string>("ResumeName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("resume_name")
                        .HasComment("简历名称");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("update_time")
                        .HasComment("更新时间");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id")
                        .HasComment("用户Id");

                    b.HasKey("Id");

                    b.ToTable("application", (string)null);
                });

            modelBuilder.Entity("LinkedOut.DB.Entity.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasComment("评论Id");

                    b.Property<string>("Content")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("content")
                        .HasComment("评论内容");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("create_time")
                        .HasComment("创建时间");

                    b.Property<string>("Floor")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("floor")
                        .HasComment("楼层");

                    b.Property<int?>("TweetId")
                        .HasColumnType("int")
                        .HasColumnName("tweet_id")
                        .HasComment("动态Id");

                    b.Property<int?>("UnifiedId")
                        .HasColumnType("int")
                        .HasColumnName("unified_id")
                        .HasComment("用户Id");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("update_time")
                        .HasComment("更新时间");

                    b.HasKey("Id");

                    b.ToTable("comment", (string)null);
                });

            modelBuilder.Entity("LinkedOut.DB.Entity.EduExperience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasComment("主键");

                    b.Property<string>("CollegeName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("college_name")
                        .HasComment("学校名字");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("create_time")
                        .HasComment("创建时间");

                    b.Property<string>("Degree")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("degree")
                        .HasComment("学位");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime")
                        .HasColumnName("end_time")
                        .HasComment("结束时间");

                    b.Property<string>("Major")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("major")
                        .HasComment("专业");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime")
                        .HasColumnName("start_time")
                        .HasComment("开始时间");

                    b.Property<int>("UnifiedId")
                        .HasColumnType("int")
                        .HasColumnName("unified_id")
                        .HasComment("用户Id");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("update_time")
                        .HasComment("更新时间");

                    b.HasKey("Id");

                    b.ToTable("edu_experience", (string)null);
                });

            modelBuilder.Entity("LinkedOut.DB.Entity.EnterpriseInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasComment("主键");

                    b.Property<string>("ContactWay")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("contact_way")
                        .HasComment("联系方式");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("create_time")
                        .HasComment("创建时间");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description")
                        .HasComment("描述");

                    b.Property<int>("UnifiedId")
                        .HasColumnType("int")
                        .HasColumnName("unified_id")
                        .HasComment("独一五二的Id");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("update_time")
                        .HasComment("更新时间");

                    b.HasKey("Id");

                    b.ToTable("enterprise_info", (string)null);
                });

            modelBuilder.Entity("LinkedOut.DB.Entity.JobExperience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasComment("主键");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("create_time")
                        .HasComment("创建时间");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)")
                        .HasColumnName("description")
                        .HasComment("简介");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime")
                        .HasColumnName("end_time")
                        .HasComment("结束时间");

                    b.Property<string>("EnterpriseName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("enterprise_name")
                        .HasComment("企业名字");

                    b.Property<int?>("NumId")
                        .HasColumnType("int")
                        .HasColumnName("num_id")
                        .HasComment("用户工作顺序经历Id");

                    b.Property<string>("PositionType")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("position_type")
                        .HasComment("职位类型");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime")
                        .HasColumnName("start_time")
                        .HasComment("开始时间");

                    b.Property<int?>("UnifiedId")
                        .HasColumnType("int")
                        .HasColumnName("unified_id")
                        .HasComment("用户Id");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("update_time")
                        .HasComment("更新时间");

                    b.HasKey("Id");

                    b.ToTable("job_experience", (string)null);
                });

            modelBuilder.Entity("LinkedOut.DB.Entity.Liked", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasComment("主键");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("create_time")
                        .HasComment("创建时间");

                    b.Property<int?>("TweetId")
                        .HasColumnType("int")
                        .HasColumnName("tweet_id")
                        .HasComment("动态Id");

                    b.Property<int?>("UnifiedId")
                        .HasColumnType("int")
                        .HasColumnName("unified_id")
                        .HasComment("用户Id");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("update_time")
                        .HasComment("更新时间");

                    b.HasKey("Id");

                    b.ToTable("liked", (string)null);
                });

            modelBuilder.Entity("LinkedOut.DB.Entity.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasComment("岗位Id");

                    b.Property<string>("ContactWay")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("contact_way")
                        .HasComment("联系方式");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("create_time")
                        .HasComment("创建时间");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description")
                        .HasComment("岗位描述");

                    b.Property<int?>("EnterpriseId")
                        .HasColumnType("int")
                        .HasColumnName("enterprise_id")
                        .HasComment("企业Id");

                    b.Property<string>("JobName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("job_name")
                        .HasComment("工作名称");

                    b.Property<string>("Limitation")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("limitation")
                        .HasComment("岗位限制");

                    b.Property<string>("PositionType")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("position_type")
                        .HasComment("岗位类型");

                    b.Property<string>("Reward")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("reward")
                        .HasComment("薪资");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("update_time")
                        .HasComment("更新时间");

                    b.Property<string>("Url")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("url")
                        .HasComment("岗位图片");

                    b.Property<string>("WorkPlace")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("work_place")
                        .HasComment("工作地点(-分隔省市eg.河北-石家庄）");

                    b.HasKey("Id");

                    b.ToTable("position", (string)null);
                });

            modelBuilder.Entity("LinkedOut.DB.Entity.Subscribed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasComment("关注Id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("create_time")
                        .HasComment("创建时间");

                    b.Property<int?>("FirstUserId")
                        .HasColumnType("int")
                        .HasColumnName("first_user_id");

                    b.Property<int?>("SecondUserId")
                        .HasColumnType("int")
                        .HasColumnName("second_user_id");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("update_time")
                        .HasComment("更新时间");

                    b.HasKey("Id");

                    b.ToTable("subscribed", (string)null);
                });

            modelBuilder.Entity("LinkedOut.DB.Entity.Tweet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasComment("动态Id");

                    b.Property<int?>("CommentNum")
                        .HasColumnType("int")
                        .HasColumnName("comment_num")
                        .HasComment("评论数");

                    b.Property<string>("Content")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("content")
                        .HasComment("动态内容");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("create_time")
                        .HasComment("创建时间");

                    b.Property<int?>("LikeNum")
                        .HasColumnType("int")
                        .HasColumnName("like_num")
                        .HasComment("喜欢数");

                    b.Property<string>("PictureUrl")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("picture_url")
                        .HasComment("照片文件数组");

                    b.Property<int>("UnifiedId")
                        .HasColumnType("int")
                        .HasColumnName("unified_id")
                        .HasComment("用户Id");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("update_time")
                        .HasComment("更新时间");

                    b.HasKey("Id");

                    b.ToTable("tweet", (string)null);
                });

            modelBuilder.Entity("LinkedOut.DB.Entity.User", b =>
                {
                    b.Property<int>("UnifiedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("unified_id")
                        .HasComment("唯一Id");

                    b.Property<string>("Avatar")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("avatar")
                        .HasComment("头像");

                    b.Property<string>("Background")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("background")
                        .HasComment("背景图");

                    b.Property<string>("BriefInfo")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("brief_info")
                        .HasComment("简要介绍");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("create_time")
                        .HasComment("创建时间");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email")
                        .HasComment("邮箱");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password")
                        .HasComment("密码");

                    b.Property<int?>("SubscribeNum")
                        .HasColumnType("int")
                        .HasColumnName("subscribe_num")
                        .HasComment("关注的数量");

                    b.Property<string>("TrueName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("true_name")
                        .HasComment("真实名字");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("update_time")
                        .HasComment("更新时间");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name")
                        .HasComment("姓名（不可以改变）");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("user_type")
                        .HasComment("用户类型");

                    b.HasKey("UnifiedId")
                        .HasName("PRIMARY");

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("LinkedOut.DB.Entity.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasComment("主键");

                    b.Property<int?>("Age")
                        .HasColumnType("int")
                        .HasColumnName("age")
                        .HasComment("年龄");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("create_time")
                        .HasComment("创建时间");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("gender")
                        .HasComment("性别");

                    b.Property<string>("IdCard")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("id_card")
                        .HasComment("身份证");

                    b.Property<string>("LivePlace")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("live_place")
                        .HasComment("居住地(-分隔省市eg.河北-石家庄)");

                    b.Property<int?>("PhoneNum")
                        .HasColumnType("int")
                        .HasColumnName("phone_num")
                        .HasComment("电话号码");

                    b.Property<string>("PrePosition")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("pre_position")
                        .HasComment("职位偏好");

                    b.Property<string>("Resume")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("resume")
                        .HasComment("简历(用逗号分隔)");

                    b.Property<int>("UnifiedId")
                        .HasColumnType("int")
                        .HasColumnName("unified_id")
                        .HasComment("独一无二的Id");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("update_time")
                        .HasComment("更新时间");

                    b.HasKey("Id");

                    b.ToTable("user_info", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
